package TravellersPalm::Controller::Home;
use strict;
use warnings;
use Template;

use Dancer2;
use Dancer2::Plugin::Database;

use Data::FormValidator;
use Date::Manip::Date;
use Data::Dumper;

use TravellersPalm::Functions;
use TravellersPalm::Database::General;

# use TravellersPalm::Model::Web;       # if you have such a module
# use TravellersPalm::Model::Themes;    # as appropriate

use DateTime::Format::Strptime;
use Digest::MD5 qw{md5_hex};
use MIME::Lite;
use URI::http;
use JSON qw//;

our $VERSION 	  = '2.0';
our $TAILOR   	= 'ready-tours', 
our $THEMES   	= 'explore-by-interest';
our $STATES   	= 'explore-by-state';
our $REGIONS  	= 'explore-by-region';
our $IDEAS    	= 'trip-ideas';
our $tokens;
our $session_currency ;
our $session_country  ;

prefix undef;


sub test {
    # show a simple index page using Template Toolkit layout main.tt
    template 'index' => { appname => config->{appname} || 'TravellersPalm' };
};

sub index {
    my ($class, $env, $match) = @_;

    my $tt = Template->new({ INCLUDE_PATH => 'views' });
    my $output = '';
    $tt->process('home.tt', { title => 'Home Page' }, \$output)
        or return [500, ['Content-Type'=>'text/plain'], ["Template error: " . $tt->error]];

    return [200, ['Content-Type'=>'text/html'], [$output]];
}

sub show {
    my $c = shift;   # in Dancer2::Plugin::RouterSimple this may be $c
    my $slidetext = TravellersPalm::Database::General::web(163);
    my @slides    = $slidetext->{data}->{writeup} =~ /\G(?=.)([^\n]*)\n?/sg;
    unshift @slides, 'dummy item';

    return $c->render( template => 'home', vars => {
        metatags             => TravellersPalm::Database::General::webpages(6),
        themes               => TravellersPalm::Database::Themes::themes('LIMIT'),
        tripideas            => TravellersPalm::Database::Themes::themes('TRIPIDEAS'),
        country              => 'india',
        slides               => \@slides,
        the_travel_experts1  => webtext(119),
        the_travel_experts2  => Webtext(120),
        the_travel_experts3  => Webtext(121),
        tailor_made_tours    => Webtext(187),
        mini_itineraries     => Webtext(188),
        best_places_to_visit => Webtext(189),
        about                => Webtext(60),
        home                 => 1
    });
}

sub before_you_go {
    template before_you_go => {
        metatags        => TravellersPalm::Functions::General::metatags('before-you-go'),
        before_you_go   => webtext(17),
        getting_ready   => webtext(168),
        right_attitude  => webtext(169),
        page_title      => 'Before You Go',
        crumb           => '<li class="active">Before You Go</li>',
    };
};

sub contact_us {
  
    my $ourtime = ourtime();
    my $error   = 0;
    my $err_msg = '';
    my $ok      = 0;
    my $crumb   = "<li><a href='".request->uri_base. request->path . "'>Contact Us</a></li>";

    if ( request->is_post ) {

        my $name = params->{name} ;
        $name =~ s/^\s*//;
        $name =~ s/\s*$//;
        if (length($name) == 0) {
            $err_msg = 'Please give me a name';
        };

        my $message = params->{message} ;
        $message =~ s/^\s*//;
        $message =~ s/\s*$//;
        if (length($message) == 0) {
            $err_msg = 'You forgot your message!' ;
        }


        my $reference = params->{reference} ;
        $reference =~ s/^\s*//;
        $reference =~ s/\s*$//;
        if (length($reference) == 0) {
            $err_msg = 'You forgot your reference.' ;
        }

        my $email = params->{email} ;
        $email =~ s/^\s*//;
        $email =~ s/\s*$//;
        if (length($email) == 0) {
            $err_msg = 'You forgot your email id!';
        } 
        elsif (!valid_email($email)) {
            $err_msg = 'Your email id appears to be wrong.';
        };

        if (length($err_msg) == 0){
            $ok = email_request($name, $email, $reference, $message);
            $error = ($ok) ? 0 : 1;

            if (!$ok) {
                $err_msg = 'We are unable to send your message. Sorry but please try again or use your own email application.';
            };
        }
        else {
            $error = 1;
        }

    };
    if ($ok) {
        return template thankyou_for_request => {
            metatags  => TravellersPalm::Database::General::metatags( ( split '/', request->path )[-1] ),
            crumb     => $crumb,
            name      => params->{name},
            email     => params->{email},
            message   => params->{message},
            reference => params->{reference},
            page_title=> 'Thank You',
        };
    };

    template contact => {
        metatags        => TravellersPalm::Database::General::metatags( ( split '/', request->path )[-1] ),
        travellers_palm => TravellersPalm::Functions::webtext(159),
        fast_replies    => TravellersPalm::Functions::webtext(160),
        ourtime         => $ourtime->strftime('%H:%M'),
        ourdate         => $ourtime->strftime('%d %B, %Y'),
        timediff        => 0, #timediff(),
        country         => 'India',
        crumb           => $crumb,
        error           => $error,
        err_msg         => $err_msg,
        name            => params->{name},
        email           => params->{email},
        message         => params->{message},
        reference       => params->{reference},
        page_title      => 'Contact Us',
    };
};

get '/currency/:currency' => sub {
   	session('currency' => currency( params->{currency} ) );
	redirect request->referer;
};

sub get_enquiry {
    my $email = ( user_is_registered() ? user_email() : "" );

    template enquiry => {
        metatags => TravellersPalm::Database::General::metatags( ( split '/', request->path )[-1] ),
        email => $email,
    };
};

sub post_enquiry  {
    my $email = ( user_is_registered() ? user_email() : "" );

    template enquiry => {
        metatags => TravellersPalm::Database::General::metatags( ( split '/', request->path )[-1] ),
        subject  => params->{subject},
        email    => $email,
    };
};

sub faq {
    template faq =>{ 
        metatags => metatags( ( split '/', request->path )[-1] ), 
        crumb =>  '<li class="active">Faq</li>',
        page_title => 'FAQ', 
    };
};


sub policies {
    my @fields = (
                  webtext(124), webtext(125), webtext(126), webtext(127),
                  webtext(128), webtext(129), webtext(130), webtext(131),
                  webtext(132), webtext(133), webtext(134), webtext(135),
                  webtext(136), webtext(137), webtext(191), webtext(138),
                  webtext(139), webtext(140), webtext(141), webtext(142),
                  webtext(143), webtext(144), webtext(145), webtext(146),
                  );

    template policies => {
        metatags   => metatags( ( split '/', request->path )[-1] ),
        conditions => webtext(15),
        terms      => webtext(35),
        privacy    => webtext(16),
        fields     => \@fields,
        about      => webtext(208),
        crumb      => '<li class="active">Our Policies</li>',
        page_title => 'Our Policies',
    };
};

sub search_results {
    template search_results => {   
        metatags            => metatags( ( split '/', request->path )[-1] ), 
        why_travel_with_us  => webtext(12),
        extensive_knowledge => webtext(153),
        highly_selective    => webtext(154),
        unbiased            => webtext(155),
        unrivalled_coverage => webtext(156),
        in_charge           => webtext(157),
        value_for_money     => webtext(158),
        page_title          => 'Search Results',
        crumb               => '<li class="active">Search Results</li>',
        };
};

sub site_map {
    my $textfile = config->{root}.'/url-report.txt';
    my @report   = ();

    if (open(my $fh, '<:encoding(UTF-8)', $textfile)) {
        while (my $row = <$fh>) {
            chomp $row;
            $row =~ /^$/ and next; # blank line
            push @report, {url => $row};
        }
    }

    template sitemap => { 
        metatags    => metatags( ( split '/', request->path )[-1] ), 
        report      => \@report,
        crumb       => ' <li class="active">Sitemap</li>',
        page_title  => 'Sitemap',
    };
};

sub state {
    # redirect due to flash maps
    redirect request->uri_base."/destinations/india/$STATES/" . params->{state} . "/list";
};

sub sustainable_tourism {

    my $sustainable = webtext(13);

    template sustainable_tourism => {
        metatags    => metatags( ( split '/', request->path )[-1] ),
        sustainable => $sustainable,
        crumb       => '<li class="active">'.$sustainable->{title}.'</li>',
        page_title  => $sustainable->{title},
    };
};

sub testimonials {

    template testimonials => {
        metatags    => metatags('testimonials'),
        page_title  => 'Testimonials',
        crumb       =>  '<li><a href="[% request.uri_base %]/about-us">About us</a></li>
                        <li class="active">Testimonials</li>', 
    };
};

sub travel_ideas {

    template travel_ideas => {
        metatags        => metatags('travel-ideas'),
        page_title      => 'Travel Ideas',
        crumb           => '<li class="active">Travel Ideas</li>',
    };
};

sub what_to_expect {

    my $expect  = webtext(21);
    
    template what_to_expect => {
        metatags        => metatags( ( split '/', request->path )[-1] ),
        what_to_expect  => $expect,
        special_hotels  => webtext(147),
        eat_drink       => webtext(148),
        private_car     => webtext(149),
        travel_by_train => webtext(150),
        fly_in_comfort  => webtext(151),
        delays          => webtext(152),
        before_you_go   => webtext(17),
        getting_ready   => webtext(168),
        right_attitude  => webtext(169),
        crumb           => '<li class="active">'.$expect->{title}.'</li>',
        page_title      => $expect->{title},
    };
};

sub why_travel_with_us {
  
    my $ourtime = ourtime();
    my $why     = webtext(12);
  
    template why_travel_with_us => {
        metatags            => metatags( ( split '/', request->path )[-1] ),
        why_travel_with_us  => $why,
        extensive_knowledge => webtext(153),
        highly_selective    => webtext(154),
        unbiased            => webtext(155),
        unrivalled_coverage => webtext(156),
        in_charge           => webtext(157),
        value_for_money     => webtext(158),
        totalcities         => totalcities(),
        ourtime             => $ourtime->strftime('%H:%M'),
        ourdate             => $ourtime->strftime('%d %B,%Y'),
        timediff            => 0, #timediff(),
        need_help           => webtext(176),
        crumb               => '<li class="active">'.$why->{title}.'</li>',
        page_title          => $why->{title},
    };
};

any qr{.*} => sub {
    template 404 => {
        page => request->path,
    };
};

1;
